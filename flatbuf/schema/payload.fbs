namespace flatbuf.payload;

table VbsThreadMap {
  threadID:short;
  partitions:[short];
}

table Payload {
  app_name:string;
  depcfg:string;
  eventing_dir:string;
  curr_host:string;
  curr_eventing_port:string;
  kv_host_port:string;
  rbac_user:string;
  rbac_pass:string;

  // DCP event related fields
  key:string; // dcp mutation key
  value:string; // dcp mutation value

  // Timer event related fields
  doc_id:string; // timer event doc_id
  callback_fn:string; // timer event callback function
  doc_ids_callback_fns:string; // non doc-id based timer event doc_id-callback_fn pairs

  lcb_inst_capacity:int; // Nested iterator related fields

  execution_timeout:int; // Execution timeout for handler code execution

  enable_v8_debugger:bool;

  enable_recursive_mutation:bool;

  partitionCount:short; // Virtual partitions for sharding workload among c++ workers
  thr_map: [VbsThreadMap]; // Mapping of vbuckets to std::thread associated with V8Worker instance;
}

root_type Payload;
