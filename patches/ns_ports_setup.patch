diff --git a/src/ns_ports_setup.erl b/src/ns_ports_setup.erl
index 6e69684..2a68895 100644
--- a/src/ns_ports_setup.erl
+++ b/src/ns_ports_setup.erl
@@ -275,6 +275,7 @@ dynamic_children(normal) ->
              per_bucket_moxi_specs(Config),
              maybe_create_ssl_proxy_spec(Config),
              run_via_goport(fun fts_spec/1, Config),
+             run_via_goport(fun eventing_node_spec/1, Config),
              run_via_goport(fun example_service_spec/1, Config)],
 
     lists:flatten(Specs).
@@ -642,6 +643,25 @@ fts_spec(Config) ->
             [Spec]
     end.
 
+eventing_node_spec(Config) ->
+    case ns_cluster_membership:should_run_service(Config, eventing, node()) of
+        false ->
+            [];
+        _ ->
+            Command = path_config:component_path(bin, "eventing"),
+            LocalMemcachedPort = ns_config:search_node_prop(node(), Config, memcached, port),
+            RestPort = misc:node_rest_port(Config, node()),
+            KVAddrArg = "-kvport=" ++ integer_to_list(LocalMemcachedPort),
+            RestArg = "-restport=" ++ integer_to_list(RestPort),
+            Spec = {'eventing', Command,
+                    [KVAddrArg, RestArg],
+                    [use_stdio, exit_status, stderr_to_stdout, stream,
+                     {env, build_go_env_vars(Config, 'eventing')},
+                     {log, "eventing.log"}]},
+            [Spec]
+    end.
+
+
 example_service_spec(Config) ->
     CacheCmd = find_executable("cache-service"),
     {value, NodeUUID} = ns_config:search(Config, {node, node(), uuid}),
